#! /usr/bin/vvp
:ivl_version "12.0 (stable)" "(v12_0-dirty)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/lib/ivl/system.vpi";
:vpi_module "/usr/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/ivl/va_math.vpi";
S_0x5e06d8aa1cd0 .scope module, "alu_tb" "alu_tb" 2 1;
 .timescale 0 0;
P_0x5e06d8aa1e60 .param/l "ADD" 1 2 5, C4<0010>;
P_0x5e06d8aa1ea0 .param/l "AND" 1 2 3, C4<0000>;
P_0x5e06d8aa1ee0 .param/l "LESSTHAN" 1 2 7, C4<0111>;
P_0x5e06d8aa1f20 .param/l "NOR" 1 2 8, C4<1100>;
P_0x5e06d8aa1f60 .param/l "OR" 1 2 4, C4<0001>;
P_0x5e06d8aa1fa0 .param/l "SUB" 1 2 6, C4<0110>;
P_0x5e06d8aa1fe0 .param/l "W" 0 2 1, +C4<00000000000000000000000001000000>;
v0x5e06d8abb760_0 .var "A", 63 0;
v0x5e06d8abb840_0 .var "ALUctl", 3 0;
v0x5e06d8abb8e0_0 .net "ALUout", 63 0, L_0x5e06d8a8e8a0;  1 drivers
v0x5e06d8abb9b0_0 .var "B", 63 0;
v0x5e06d8abba80_0 .net "Overflow", 0 0, L_0x5e06d8a8e910;  1 drivers
v0x5e06d8abbb20_0 .net "Zero", 0 0, L_0x5e06d8acbec0;  1 drivers
S_0x5e06d8a620d0 .scope module, "calc" "alu" 2 15, 3 1 0, S_0x5e06d8aa1cd0;
 .timescale 0 0;
    .port_info 0 /INPUT 4 "ALUctl";
    .port_info 1 /INPUT 64 "A";
    .port_info 2 /INPUT 64 "B";
    .port_info 3 /OUTPUT 64 "ALUout";
    .port_info 4 /OUTPUT 1 "Overflow";
    .port_info 5 /OUTPUT 1 "Zero";
P_0x5e06d8a62260 .param/l "ADD" 1 3 12, C4<0010>;
P_0x5e06d8a622a0 .param/l "AND" 1 3 10, C4<0000>;
P_0x5e06d8a622e0 .param/l "LESSTHAN" 1 3 14, C4<0111>;
P_0x5e06d8a62320 .param/l "NOR" 1 3 15, C4<1100>;
P_0x5e06d8a62360 .param/l "OR" 1 3 11, C4<0001>;
P_0x5e06d8a623a0 .param/l "SUB" 1 3 13, C4<0110>;
P_0x5e06d8a623e0 .param/l "W" 0 3 2, +C4<00000000000000000000000001000000>;
L_0x5e06d8a8e8a0 .functor BUFZ 64, v0x5e06d8abb5c0_0, C4<0000000000000000000000000000000000000000000000000000000000000000>, C4<0000000000000000000000000000000000000000000000000000000000000000>, C4<0000000000000000000000000000000000000000000000000000000000000000>;
L_0x5e06d8a8e910 .functor BUFZ 1, v0x5e06d8abb500_0, C4<0>, C4<0>, C4<0>;
v0x5e06d8a8ef00_0 .net "A", 63 0, v0x5e06d8abb760_0;  1 drivers
v0x5e06d8abad30_0 .net "ALUctl", 3 0, v0x5e06d8abb840_0;  1 drivers
v0x5e06d8abae30_0 .net "ALUout", 63 0, L_0x5e06d8a8e8a0;  alias, 1 drivers
v0x5e06d8abaef0_0 .net "B", 63 0, v0x5e06d8abb9b0_0;  1 drivers
v0x5e06d8abafd0_0 .net "Overflow", 0 0, L_0x5e06d8a8e910;  alias, 1 drivers
v0x5e06d8abb0e0_0 .net "Zero", 0 0, L_0x5e06d8acbec0;  alias, 1 drivers
L_0x7764590e90a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5e06d8abb1a0_0 .net/2u *"_ivl_10", 0 0, L_0x7764590e90a8;  1 drivers
L_0x7764590e9018 .functor BUFT 1, C4<0000000000000000000000000000000000000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5e06d8abb280_0 .net/2u *"_ivl_4", 63 0, L_0x7764590e9018;  1 drivers
v0x5e06d8abb360_0 .net *"_ivl_6", 0 0, L_0x5e06d8acbd20;  1 drivers
L_0x7764590e9060 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5e06d8abb420_0 .net/2u *"_ivl_8", 0 0, L_0x7764590e9060;  1 drivers
v0x5e06d8abb500_0 .var "reg_overflow", 0 0;
v0x5e06d8abb5c0_0 .var "resultado", 63 0;
E_0x5e06d8a9c990 .event anyedge, v0x5e06d8abaef0_0, v0x5e06d8a8ef00_0, v0x5e06d8abad30_0;
L_0x5e06d8acbd20 .cmp/eq 64, v0x5e06d8abb5c0_0, L_0x7764590e9018;
L_0x5e06d8acbec0 .functor MUXZ 1, L_0x7764590e90a8, L_0x7764590e9060, L_0x5e06d8acbd20, C4<>;
    .scope S_0x5e06d8a620d0;
T_0 ;
    %wait E_0x5e06d8a9c990;
    %load/vec4 v0x5e06d8abad30_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 4;
    %cmp/u;
    %jmp/1 T_0.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 4;
    %cmp/u;
    %jmp/1 T_0.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 4;
    %cmp/u;
    %jmp/1 T_0.2, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 4;
    %cmp/u;
    %jmp/1 T_0.3, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 4;
    %cmp/u;
    %jmp/1 T_0.4, 6;
    %dup/vec4;
    %pushi/vec4 12, 0, 4;
    %cmp/u;
    %jmp/1 T_0.5, 6;
    %jmp T_0.6;
T_0.0 ;
    %load/vec4 v0x5e06d8a8ef00_0;
    %load/vec4 v0x5e06d8abaef0_0;
    %and;
    %store/vec4 v0x5e06d8abb5c0_0, 0, 64;
    %jmp T_0.6;
T_0.1 ;
    %load/vec4 v0x5e06d8a8ef00_0;
    %load/vec4 v0x5e06d8abaef0_0;
    %or;
    %store/vec4 v0x5e06d8abb5c0_0, 0, 64;
    %jmp T_0.6;
T_0.2 ;
    %load/vec4 v0x5e06d8a8ef00_0;
    %load/vec4 v0x5e06d8abaef0_0;
    %add;
    %store/vec4 v0x5e06d8abb5c0_0, 0, 64;
    %load/vec4 v0x5e06d8a8ef00_0;
    %parti/s 1, 63, 7;
    %nor/r;
    %flag_set/vec4 10;
    %flag_get/vec4 10;
    %jmp/0 T_0.11, 10;
    %load/vec4 v0x5e06d8abaef0_0;
    %parti/s 1, 63, 7;
    %nor/r;
    %and;
T_0.11;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_0.10, 9;
    %load/vec4 v0x5e06d8abb5c0_0;
    %parti/s 1, 63, 7;
    %and;
T_0.10;
    %flag_set/vec4 8;
    %jmp/1 T_0.9, 8;
    %load/vec4 v0x5e06d8a8ef00_0;
    %parti/s 1, 63, 7;
    %flag_set/vec4 11;
    %flag_get/vec4 11;
    %jmp/0 T_0.13, 11;
    %load/vec4 v0x5e06d8abaef0_0;
    %parti/s 1, 63, 7;
    %and;
T_0.13;
    %flag_set/vec4 10;
    %flag_get/vec4 10;
    %jmp/0 T_0.12, 10;
    %load/vec4 v0x5e06d8abb5c0_0;
    %parti/s 1, 63, 7;
    %nor/r;
    %and;
T_0.12;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_0.9;
    %jmp/0xz  T_0.7, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5e06d8abb500_0, 0, 1;
    %jmp T_0.8;
T_0.7 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5e06d8abb500_0, 0, 1;
T_0.8 ;
    %jmp T_0.6;
T_0.3 ;
    %load/vec4 v0x5e06d8a8ef00_0;
    %load/vec4 v0x5e06d8abaef0_0;
    %sub;
    %store/vec4 v0x5e06d8abb5c0_0, 0, 64;
    %load/vec4 v0x5e06d8a8ef00_0;
    %parti/s 1, 63, 7;
    %flag_set/vec4 10;
    %flag_get/vec4 10;
    %jmp/0 T_0.18, 10;
    %load/vec4 v0x5e06d8abaef0_0;
    %parti/s 1, 63, 7;
    %nor/r;
    %and;
T_0.18;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_0.17, 9;
    %load/vec4 v0x5e06d8abb5c0_0;
    %parti/s 1, 63, 7;
    %nor/r;
    %and;
T_0.17;
    %flag_set/vec4 8;
    %jmp/1 T_0.16, 8;
    %load/vec4 v0x5e06d8a8ef00_0;
    %parti/s 1, 63, 7;
    %nor/r;
    %flag_set/vec4 11;
    %flag_get/vec4 11;
    %jmp/0 T_0.20, 11;
    %load/vec4 v0x5e06d8abaef0_0;
    %parti/s 1, 63, 7;
    %and;
T_0.20;
    %flag_set/vec4 10;
    %flag_get/vec4 10;
    %jmp/0 T_0.19, 10;
    %load/vec4 v0x5e06d8abb5c0_0;
    %parti/s 1, 63, 7;
    %and;
T_0.19;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_0.16;
    %jmp/0xz  T_0.14, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5e06d8abb500_0, 0, 1;
    %jmp T_0.15;
T_0.14 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5e06d8abb500_0, 0, 1;
T_0.15 ;
    %jmp T_0.6;
T_0.4 ;
    %load/vec4 v0x5e06d8a8ef00_0;
    %load/vec4 v0x5e06d8abaef0_0;
    %cmp/u;
    %flag_get/vec4 5;
    %pad/u 64;
    %store/vec4 v0x5e06d8abb5c0_0, 0, 64;
    %jmp T_0.6;
T_0.5 ;
    %load/vec4 v0x5e06d8a8ef00_0;
    %load/vec4 v0x5e06d8abaef0_0;
    %or;
    %inv;
    %store/vec4 v0x5e06d8abb5c0_0, 0, 64;
    %jmp T_0.6;
T_0.6 ;
    %pop/vec4 1;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x5e06d8aa1cd0;
T_1 ;
    %vpi_call 2 25 "$monitor", "(%b) A: %b; B: %b; res: %b; Overflow: %b; zero: %b", v0x5e06d8abb840_0, v0x5e06d8abb760_0, v0x5e06d8abb9b0_0, v0x5e06d8abb8e0_0, v0x5e06d8abba80_0, v0x5e06d8abbb20_0 {0 0 0};
    %pushi/vec4 6, 0, 4;
    %store/vec4 v0x5e06d8abb840_0, 0, 4;
    %pushi/vec4 2147483648, 0, 32;
    %concati/vec4 0, 0, 32;
    %store/vec4 v0x5e06d8abb760_0, 0, 64;
    %pushi/vec4 1, 0, 64;
    %store/vec4 v0x5e06d8abb9b0_0, 0, 64;
    %vpi_call 2 30 "$finish" {0 0 0};
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "alu_tb.v";
    "alu.v";
